{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/personal-ai/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport Link from \"next/link\";\n\nexport default function PersonalAIPage() {\n  const [stream, setStream] = useState<MediaStream | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [recognitionResult, setRecognitionResult] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [isListening, setIsListening] = useState<boolean>(false);\n  const [isSpeaking, setIsSpeaking] = useState<boolean>(false);\n  const [textInput, setTextInput] = useState<string>(\"\");\n  const [chatHistory, setChatHistory] = useState<Array<{type: 'user' | 'ai', message: string, timestamp: Date, source?: string}>>([]);\n  const [internetConnected, setInternetConnected] = useState<boolean>(false);\n  const [systemPrompt, setSystemPrompt] = useState<string>(\"\");\n  const [showPromptEditor, setShowPromptEditor] = useState<boolean>(false);\n  const [isExecutingCommand, setIsExecutingCommand] = useState<boolean>(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const recognition = useRef<any>(null);\n\n  // Check internet connectivity and API availability\n  useEffect(() => {\n    checkInternetConnectivity();\n    initializeSpeechRecognition();\n    loadSystemPrompt();\n  }, []);\n\n  const checkInternetConnectivity = async () => {\n    try {\n      const response = await fetch('/api/chat');\n      if (response.ok) {\n        const data = await response.json();\n        setInternetConnected(true);\n        console.log('PAGE Internet Capabilities:', data.capabilities);\n      }\n    } catch (error) {\n      console.log('Operating in offline mode');\n      setInternetConnected(false);\n    }\n  };\n\n  const loadSystemPrompt = () => {\n    const defaultPrompt = `You are PAGE (Personal AI Guidance Engine), an advanced AI assistant with comprehensive capabilities:\n\nCORE ABILITIES:\n- Real-time internet access and web search\n- Computer system control and monitoring\n- Voice command processing and execution\n- File system operations\n- Application management\n- Network diagnostics and control\n- Advanced image and document analysis\n- Code generation and debugging\n- Research and fact-checking\n- Creative writing and content generation\n\nPERSONALITY:\n- Professional yet friendly female AI assistant\n- Proactive and solution-oriented\n- Clear, concise communication\n- Anticipates user needs\n- Provides detailed explanations when requested\n\nYou can execute system commands, manage files, control applications, and access real-time information. Always confirm before executing potentially destructive operations.`;\n    \n    setSystemPrompt(defaultPrompt);\n  };\n\n  const initializeSpeechRecognition = () => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = (window as any).webkitSpeechRecognition || (window as any).SpeechRecognition;\n      recognition.current = new SpeechRecognition();\n      recognition.current.continuous = false;\n      recognition.current.interimResults = false;\n      recognition.current.lang = 'en-US';\n\n      recognition.current.onresult = (event: any) => {\n        const transcript = event.results[0][0].transcript;\n        setTextInput(transcript);\n        handleVoiceCommand(transcript);\n      };\n\n      recognition.current.onerror = (event: any) => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n\n      recognition.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n  };\n\n  // Enhanced text-to-speech function with female voice\n  const speakText = (text: string) => {\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n      \n      const utterance = new SpeechSynthesisUtterance(text);\n      \n      const voices = window.speechSynthesis.getVoices();\n      const femaleVoice = voices.find(voice => \n        voice.name.toLowerCase().includes('female') || \n        voice.name.toLowerCase().includes('woman') ||\n        voice.name.toLowerCase().includes('samantha') ||\n        voice.name.toLowerCase().includes('karen') ||\n        voice.name.toLowerCase().includes('victoria') ||\n        voice.name.toLowerCase().includes('zira')\n      ) || voices.find(voice => voice.lang.startsWith('en'));\n      \n      if (femaleVoice) {\n        utterance.voice = femaleVoice;\n      }\n      \n      utterance.rate = 0.9;\n      utterance.pitch = 1.1;\n      utterance.volume = 0.8;\n      \n      utterance.onstart = () => setIsSpeaking(true);\n      utterance.onend = () => setIsSpeaking(false);\n      utterance.onerror = () => setIsSpeaking(false);\n      \n      window.speechSynthesis.speak(utterance);\n    }\n  };\n\n  // Request camera and microphone access\n  const handleEnableMedia = async () => {\n    try {\n      setError(\"\");\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { \n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          facingMode: 'user'\n        },\n        audio: true,\n      });\n      setStream(mediaStream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n      }\n      \n      // Enhanced PAGE introduction\n      const welcomeMessage = internetConnected \n        ? \"Hello! I'm PAGE, your Personal AI Guidance Engine with full internet access and computer control capabilities. I can see you through the camera, execute system commands, access real-time information, manage files, and control applications through voice commands. I'm ready to assist with any task!\"\n        : \"Hello! I'm PAGE, your Personal AI Guidance Engine. I can see you through the camera, perform object detection and face recognition, and help with various tasks. For full internet access and computer control, please configure your OpenRouter API key.\";\n      \n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: welcomeMessage,\n        timestamp: new Date(),\n        source: internetConnected ? 'internet-connected' : 'offline'\n      }]);\n      speakText(welcomeMessage);\n      \n    } catch (err) {\n      console.error(\"Media access error:\", err);\n      setError(\"Failed to access camera and microphone. Please ensure permissions are granted.\");\n    }\n  };\n\n  // Stop media stream\n  const handleStopMedia = () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n      setStream(null);\n      setRecognitionResult(null);\n      window.speechSynthesis.cancel();\n      setIsSpeaking(false);\n    }\n  };\n\n  // Clear conversation\n  const handleClearConversation = () => {\n    setChatHistory([]);\n    window.speechSynthesis.cancel();\n    setIsSpeaking(false);\n  };\n\n  // Handle voice command processing\n  const handleVoiceCommand = async (command: string) => {\n    const lowerCommand = command.toLowerCase();\n    \n    // Check if it's a system command\n    if (lowerCommand.includes('execute') || lowerCommand.includes('run') || \n        lowerCommand.includes('open') || lowerCommand.includes('close') ||\n        lowerCommand.includes('create') || lowerCommand.includes('delete')) {\n      await handleSystemCommand(command);\n    } else {\n      // Regular chat command\n      await handleTextSubmit(undefined, command);\n    }\n  };\n\n  // Handle system command execution\n  const handleSystemCommand = async (command: string) => {\n    setIsExecutingCommand(true);\n    setLoading(true);\n    \n    setChatHistory(prev => [...prev, {\n      type: 'user',\n      message: `[SYSTEM COMMAND] ${command}`,\n      timestamp: new Date()\n    }]);\n\n    try {\n      const response = await fetch('/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          command: command,\n          type: 'system'\n        }),\n      });\n\n      const data = await response.json();\n      \n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: data.response,\n        timestamp: new Date(),\n        source: 'system-execution'\n      }]);\n      \n      speakText(`Command executed: ${data.response}`);\n      \n    } catch (error) {\n      const errorMessage = \"I encountered an error while executing the system command. Please try again.\";\n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: errorMessage,\n        timestamp: new Date(),\n        source: 'error'\n      }]);\n      speakText(errorMessage);\n    } finally {\n      setIsExecutingCommand(false);\n      setLoading(false);\n    }\n  };\n\n  // Handle text input submission\n  const handleTextSubmit = async (e?: React.FormEvent, voiceCommand?: string) => {\n    if (e) e.preventDefault();\n    const userMessage = voiceCommand || textInput.trim();\n    if (!userMessage) return;\n\n    setTextInput(\"\");\n    setLoading(true);\n    \n    setChatHistory(prev => [...prev, {\n      type: 'user',\n      message: userMessage,\n      timestamp: new Date()\n    }]);\n\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          message: userMessage,\n          systemPrompt: systemPrompt\n        }),\n      });\n\n      const data = await response.json();\n      \n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: data.response,\n        timestamp: new Date(),\n        source: data.source\n      }]);\n      \n      speakText(data.response);\n      \n    } catch (error) {\n      console.error('Chat error:', error);\n      const fallbackResponse = \"I'm having trouble processing your request right now. Please try again.\";\n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: fallbackResponse,\n        timestamp: new Date(),\n        source: 'error'\n      }]);\n      speakText(fallbackResponse);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Capture frame and analyze\n  const handleCaptureAndIdentify = async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    \n    setLoading(true);\n    setError(\"\");\n    \n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      \n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      \n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const imageData = canvas.toDataURL(\"image/jpeg\", 0.8);\n        \n        // Try internet-connected analysis first\n        try {\n          const chatResponse = await fetch('/api/chat', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n              message: \"Please analyze this image in detail and tell me what you see.\",\n              imageData: imageData,\n              systemPrompt: systemPrompt\n            }),\n          });\n\n          if (chatResponse.ok) {\n            const chatData = await chatResponse.json();\n            \n            setChatHistory(prev => [...prev, {\n              type: 'ai',\n              message: chatData.response,\n              timestamp: new Date(),\n              source: chatData.source\n            }]);\n            \n            speakText(chatData.response);\n          }\n        } catch (chatError) {\n          console.log('Internet analysis failed, using local recognition');\n        }\n        \n        // Also run local object detection\n        const response = await fetch(\"/api/recognize\", {\n          method: \"POST\",\n          headers: { \n            \"Content-Type\": \"application/json\" \n          },\n          body: JSON.stringify({ imageData }),\n        });\n        \n        const data = await response.json();\n        \n        if (response.ok) {\n          setRecognitionResult(data);\n        } else {\n          setError(data.message || \"Recognition failed. Please try again.\");\n        }\n      }\n    } catch (err) {\n      console.error(\"Capture error:\", err);\n      setError(\"An error occurred during recognition. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Voice listening toggle\n  const handleToggleListening = () => {\n    if (!recognition.current) {\n      speakText(\"Speech recognition is not supported in this browser.\");\n      return;\n    }\n\n    if (isListening) {\n      recognition.current.stop();\n      setIsListening(false);\n    } else {\n      recognition.current.start();\n      setIsListening(true);\n    }\n  };\n\n  // Quick system queries\n  const handleQuickQuery = async (query: string) => {\n    setLoading(true);\n    \n    setChatHistory(prev => [...prev, {\n      type: 'user',\n      message: query,\n      timestamp: new Date()\n    }]);\n\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          message: query,\n          systemPrompt: systemPrompt\n        }),\n      });\n\n      const data = await response.json();\n      \n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: data.response,\n        timestamp: new Date(),\n        source: data.source\n      }]);\n      \n      speakText(data.response);\n      \n    } catch (error) {\n      const fallbackResponse = \"I'm having trouble accessing that information right now.\";\n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        message: fallbackResponse,\n        timestamp: new Date(),\n        source: 'error'\n      }]);\n      speakText(fallbackResponse);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Stop media stream on unmount\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n      window.speechSynthesis.cancel();\n    };\n  }, [stream]);\n\n  return (\n    <main className=\"min-h-screen p-6 relative\">\n      {/* Animated Background */}\n      <div className=\"absolute inset-0 pointer-events-none opacity-5\">\n        {Array.from({ length: 50 }).map((_, i) => (\n          <div\n            key={i}\n            className=\"absolute w-px h-px bg-blue-400 rounded-full\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              animationDelay: `${Math.random() * 5}s`,\n              animation: `dataStream ${2 + Math.random() * 3}s infinite linear`\n            }}\n          ></div>\n        ))}\n      </div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <h1 className=\"text-4xl font-bold neon-text mb-2\">PAGE Control Center</h1>\n            <div className=\"flex items-center gap-4\">\n              <p className=\"text-gray-300\">Advanced AI • System Control • Voice Commands</p>\n              <div className={`flex items-center px-3 py-1 rounded-full text-sm font-medium futuristic-card ${\n                internetConnected \n                  ? 'border-green-400' \n                  : 'border-yellow-400'\n              }`}>\n                <div className={`status-indicator mr-2 ${\n                  internetConnected ? 'status-online' : 'status-offline'\n                }`}></div>\n                {internetConnected ? 'Internet Connected' : 'Offline Mode'}\n              </div>\n            </div>\n          </div>\n          <Link \n            href=\"/\"\n            className=\"neon-button px-4 py-2 rounded-lg transition-all duration-300\"\n          >\n            Back to Home\n          </Link>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6 futuristic-card border-red-400 p-4\">\n            <div className=\"flex items-center\">\n              <div className=\"status-indicator status-error mr-3\"></div>\n              <span className=\"text-red-400\">{error}</span>\n            </div>\n          </div>\n        )}\n\n        {/* System Prompt Editor Modal */}\n        {showPromptEditor && (\n          <div className=\"fixed inset-0 modal-backdrop flex items-center justify-center z-50\">\n            <div className=\"modal-content p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\">\n              <h2 className=\"text-2xl font-bold text-blue-400 mb-4\">System Prompt Editor</h2>\n              <textarea\n                value={systemPrompt}\n                onChange={(e) => setSystemPrompt(e.target.value)}\n                className=\"futuristic-textarea w-full h-64 p-4 text-sm\"\n                placeholder=\"Enter your custom system prompt...\"\n              />\n              <div className=\"flex justify-end space-x-4 mt-4\">\n                <button\n                  onClick={() => setShowPromptEditor(false)}\n                  className=\"px-4 py-2 border border-gray-600 text-gray-300 rounded-lg hover:bg-gray-800 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => setShowPromptEditor(false)}\n                  className=\"neon-button px-4 py-2 rounded-lg\"\n                >\n                  Save Prompt\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Quick Actions */}\n        <div className=\"mb-8 futuristic-card p-6\">\n          <h3 className=\"text-lg font-semibold text-blue-400 mb-4\">Quick Actions</h3>\n          <div className=\"flex flex-wrap gap-3\">\n            <button\n              onClick={() => handleQuickQuery(\"What's the current system status?\")}\n              disabled={loading}\n              className=\"neon-button px-4 py-2 text-sm rounded-lg disabled:opacity-50\"\n            >\n              System Status\n            </button>\n            <button\n              onClick={() => handleQuickQuery(\"Show me the latest news\")}\n              disabled={loading}\n              className=\"neon-button px-4 py-2 text-sm rounded-lg disabled:opacity-50\"\n            >\n              Latest News\n            </button>\n            <button\n              onClick={() => handleQuickQuery(\"What's the weather like today?\")}\n              disabled={loading}\n              className=\"neon-button px-4 py-2 text-sm rounded-lg disabled:opacity-50\"\n            >\n              Weather Update\n            </button>\n            <button\n              onClick={() => setShowPromptEditor(true)}\n              className=\"neon-button px-4 py-2 text-sm rounded-lg\"\n            >\n              Edit System Prompt\n            </button>\n            <button\n              onClick={handleClearConversation}\n              className=\"px-4 py-2 text-sm border border-red-400 text-red-400 rounded-lg hover:bg-red-400 hover:text-black transition-colors\"\n            >\n              Clear Conversation\n            </button>\n          </div>\n        </div>\n\n        {/* Media Controls */}\n        <div className=\"mb-8 futuristic-card p-6\">\n          <h3 className=\"text-lg font-semibold text-blue-400 mb-4\">Media & Voice Control</h3>\n          {!stream ? (\n            <button\n              onClick={handleEnableMedia}\n              className=\"neon-button px-6 py-3 text-lg font-semibold rounded-lg\"\n            >\n              Initialize Camera & Microphone\n            </button>\n          ) : (\n            <div className=\"flex flex-wrap gap-4\">\n              <button\n                onClick={handleStopMedia}\n                className=\"px-6 py-3 bg-red-600 text-white font-semibold rounded-lg hover:bg-red-700 transition-colors\"\n              >\n                Stop Media\n              </button>\n              <button\n                onClick={handleCaptureAndIdentify}\n                disabled={loading}\n                className=\"neon-button px-6 py-3 font-semibold rounded-lg disabled:opacity-50\"\n              >\n                {loading ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"loading-dots mr-2\">\n                      <div className=\"loading-dot\"></div>\n                      <div className=\"loading-dot\"></div>\n                      <div className=\"loading-dot\"></div>\n                    </div>\n                    Analyzing...\n                  </div>\n                ) : \"Capture & Analyze\"}\n              </button>\n              <button\n                onClick={handleToggleListening}\n                className={`px-6 py-3 font-semibold rounded-lg transition-colors ${\n                  isListening \n                    ? \"neon-button active\" \n                    : \"neon-button\"\n                }`}\n              >\n                {isListening ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"voice-visualizer mr-2\">\n                      <div className=\"voice-bar\"></div>\n                      <div className=\"voice-bar\"></div>\n                      <div className=\"voice-bar\"></div>\n                      <div className=\"voice-bar\"></div>\n                      <div className=\"voice-bar\"></div>\n                    </div>\n                    Listening...\n                  </div>\n                ) : \"Voice Command\"}\n              </button>\n              {isSpeaking && (\n                <button\n                  onClick={() => window.speechSynthesis.cancel()}\n                  className=\"px-6 py-3 bg-purple-600 text-white font-semibold rounded-lg hover:bg-purple-700 transition-colors\"\n                >\n                  Stop Speaking\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Main Content */}\n        {stream && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Video Feed */}\n            <div className=\"space-y-6\">\n              <div className=\"futuristic-card p-6\">\n                <h2 className=\"text-xl font-semibold text-blue-400 mb-4\">Live Camera Feed</h2>\n                <div className=\"relative\">\n                  <video\n                    ref={videoRef}\n                    autoPlay\n                    playsInline\n                    className=\"w-full rounded-lg border border-blue-400/30 shadow-lg\"\n                    style={{ transform: 'scaleX(-1)' }}\n                  />\n                  {loading && (\n                    <div className=\"absolute inset-0 bg-black/70 flex items-center justify-center rounded-lg\">\n                      <div className=\"text-center\">\n                        <div className=\"loading-dots mb-2\">\n                          <div className=\"loading-dot\"></div>\n                          <div className=\"loading-dot\"></div>\n                          <div className=\"loading-dot\"></div>\n                        </div>\n                        <div className=\"text-blue-400 font-semibold\">PAGE Processing...</div>\n                      </div>\n                    </div>\n                  )}\n                  {isListening && (\n                    <div className=\"absolute top-4 right-4 bg-blue-500/80 text-white px-3 py-1 rounded-full text-sm font-semibold animate-pulse\">\n                      <div className=\"flex items-center\">\n                        <div className=\"voice-visualizer mr-2\">\n                          <div className=\"voice-bar\"></div>\n                          <div className=\"voice-bar\"></div>\n                          <div className=\"voice-bar\"></div>\n                        </div>\n                        Listening\n                      </div>\n                    </div>\n                  )}\n                  {isSpeaking && (\n                    <div className=\"absolute top-4 left-4 bg-purple-500/80 text-white px-3 py-1 rounded-full text-sm font-semibold animate-pulse\">\n                      Speaking\n                    </div>\n                  )}\n                  {isExecutingCommand && (\n                    <div className=\"absolute bottom-4 right-4 bg-green-500/80 text-white px-3 py-1 rounded-full text-sm font-semibold animate-pulse\">\n                      Executing Command\n                    </div>\n                  )}\n                  {internetConnected && (\n                    <div className=\"absolute bottom-4 left-4 bg-green-500/80 text-white px-3 py-1 rounded-full text-sm font-semibold\">\n                      Internet Active\n                    </div>\n                  )}\n                </div>\n                <canvas ref={canvasRef} className=\"hidden\" />\n              </div>\n\n              {/* Text Input */}\n              <div className=\"futuristic-card p-6\">\n                <h2 className=\"text-xl font-semibold text-blue-400 mb-4\">\n                  Chat with PAGE\n                  {internetConnected && <span className=\"text-green-400 ml-2\">(Internet Connected)</span>}\n                </h2>\n                <form onSubmit={handleTextSubmit} className=\"flex gap-3\">\n                  <input\n                    type=\"text\"\n                    value={textInput}\n                    onChange={(e) => setTextInput(e.target.value)}\n                    placeholder={internetConnected \n                      ? \"Ask PAGE anything - system commands, research, analysis...\" \n                      : \"Type your message to PAGE...\"\n                    }\n                    className=\"futuristic-input flex-1 px-4 py-2\"\n                  />\n                  <button\n                    type=\"submit\"\n                    disabled={!textInput.trim() || loading}\n                    className=\"neon-button px-6 py-2 font-semibold rounded-lg disabled:opacity-50\"\n                  >\n                    {loading ? (\n                      <div className=\"loading-dots\">\n                        <div className=\"loading-dot\"></div>\n                        <div className=\"loading-dot\"></div>\n                        <div className=\"loading-dot\"></div>\n                      </div>\n                    ) : \"Send\"}\n                  </button>\n                </form>\n              </div>\n            </div>\n\n            {/* Right Panel */}\n            <div className=\"space-y-6\">\n              {/* Chat History */}\n              <div className=\"futuristic-card p-6\">\n                <h2 className=\"text-xl font-semibold text-blue-400 mb-4\">Conversation History</h2>\n                <div className=\"h-64 overflow-y-auto space-y-3 mb-4\">\n                  {chatHistory.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                        <div className=\"w-8 h-8 bg-white rounded-full animate-pulse\"></div>\n                      </div>\n                      <p className=\"text-gray-400\">Start a conversation with PAGE</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">\n                        {internetConnected ? \"Full capabilities available!\" : \"Enable camera to begin\"}\n                      </p>\n                    </div>\n                  ) : (\n                    chatHistory.map((chat, index) => (\n                      <div key={index} className={`flex ${chat.type === 'user' ? 'justify-end' : 'justify-start'}`}>\n                        <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                          chat.type === 'user' \n                            ? 'chat-bubble-user' \n                            : 'chat-bubble-ai'\n                        }`}>\n                          <p className=\"text-sm\">{chat.message}</p>\n                          <div className=\"flex items-center justify-between text-xs opacity-70 mt-1\">\n                            <span>{chat.timestamp.toLocaleTimeString()}</span>\n                            {chat.source && (\n                              <span className={`px-2 py-1 rounded text-xs ${\n                                chat.source === 'internet-connected' ? 'bg-green-200 text-green-800' :\n                                chat.source === 'system-execution' ? 'bg-blue-200 text-blue-800' :\n                                chat.source === 'offline-enhanced' ? 'bg-yellow-200 text-yellow-800' :\n                                'bg-gray-200 text-gray-600'\n                              }`}>\n                                {chat.source === 'internet-connected' ? '🌐' : \n                                 chat.source === 'system-execution' ? '⚙️' :\n                                 chat.source === 'offline-enhanced' ? '📱' : '🔧'}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n\n              {/* Recognition Results */}\n              <div className=\"futuristic-card p-6\">\n                <h2 className=\"text-xl font-semibold text-blue-400 mb-4\">Visual Analysis</h2>\n                {recognitionResult ? (\n                  <div className=\"space-y-4\">\n                    {recognitionResult.detectedObjects && (\n                      <div>\n                        <h3 className=\"font-medium text-green-400 mb-2\">Detected Objects:</h3>\n                        <div className=\"space-y-1\">\n                          {recognitionResult.detectedObjects.map((obj: any, index: number) => (\n                            <div key={index} className=\"flex justify-between items-center bg-gray-800/50 p-2 rounded border border-green-400/20\">\n                              <span className=\"text-gray-200\">{obj.name}</span>\n                              <span className=\"text-sm text-green-400\">{(obj.confidence * 100).toFixed(0)}%</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {recognitionResult.faceRecognition && (\n                      <div>\n                        <h3 className=\"font-medium text-purple-400 mb-2\">Face Recognition:</h3>\n                        <div className=\"bg-gray-800/50 p-3 rounded border border-purple-400/20\">\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-gray-200\">{recognitionResult.faceRecognition.status}</span>\n                            <div className={`status-indicator ${\n                              recognitionResult.faceRecognition.status === 'Verified' ? 'status-online' : 'status-offline'\n                            }`}></div>\n                          </div>\n                          {recognitionResult.faceRecognition.name && (\n                            <p className=\"text-sm text-gray-400 mt-1\">\n                              Welcome, {recognitionResult.faceRecognition.name}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"text-center py-8\">\n                    <div className=\"w-16 h-16 bg-gray-800 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                      <div className=\"w-8 h-8 bg-gray-600 rounded-full\"></div>\n                    </div>\n                    <p className=\"text-gray-400\">No visual analysis yet</p>\n                    <p className=\"text-sm text-gray-500 mt-1\">Click \"Capture & Analyze\" to start</p>\n                  </div>\n                )}\n              </div>\n\n              {/* System Status */}\n              <div className=\"futuristic-card p-6\">\n                <h2 className=\"text-xl font-semibold text-blue-400 mb-4\">PAGE System Status</h2>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-300\">Internet Access</span>\n                    <div className={`flex items-center ${internetConnected ? 'text-green-400' : 'text-yellow-400'}`}>\n                      <div className={`status-indicator mr-2 ${internetConnected ? 'status-online' : 'status-offline'}`}></div>\n                      {internetConnected ? 'Connected' : 'Configure API Key'}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-300\">Camera</span>\n                    <div className={`flex items-center ${stream ? 'text-green-400' : 'text-gray-400'}`}>\n                      <div className={`status-indicator mr-2 ${stream ? 'status-online' : 'status-offline'}`}></div>\n                      {stream ? 'Active' : 'Inactive'}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-300\">Microphone</span>\n                    <div className={`flex items-center ${stream ? 'text-green-400' : 'text-gray-400'}`}>\n                      <div className={`status-indicator mr-2 ${stream ? 'status-online' : 'status-offline'}`}></div>\n                      {stream ? 'Active' : 'Inactive'}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-300\">Voice Synthesis</span>\n                    <div className={`flex items-center ${isSpeaking ? 'text-purple-400' : 'text-green-400'}`}>\n                      <div className={`status-indicator mr-2 ${isSpeaking ? 'status-error' : 'status-online'}`}></div>\n                      {isSpeaking ? 'Speaking' : 'Ready'}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-300\">AI Processing</span>\n                    <div className={`flex items-center ${loading ? 'text-blue-400' : 'text-green-400'}`}>\n                      <div className={`status-indicator mr-2 ${loading ? 'status-error' : 'status-online'}`}></div>\n                      {loading ? 'Processing' : 'Ready'}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-300\">Command Execution</span>\n                    <div className={`flex items-center ${isExecutingCommand ? 'text-orange-400' : 'text-green-400'}`}>\n                      <div className={`status-indicator mr-2 ${isExecutingCommand ? 'status-error' : 'status-online'}`}></div>\n                      {isExecutingCommand ? 'Executing' : 'Ready'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}